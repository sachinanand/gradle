apply plugin:'java'
apply plugin:   'groovy'
apply plugin:'idea'

buildscript {
    repositories {

        maven {
            url uri('../custom-plugin/repo')
        }
    }
    dependencies {
        classpath group: 'com.ig', 
                  name: 'myplugin', 
                  version: '0.1'
    }
}


apply plugin : 'myplugin'


task hello {
println "hello";
}

repositories {
    mavenCentral()
    maven { url 'http://download.java.net/maven/1' }
    maven { url 'http://download.java.net/maven/2' }
}


sourceSets {
    main {
        java { srcDir "$buildDir/generated" }
        groovy { srcDir 'src/groovy' }
    }
    test {
        java { srcDirs = ['test/java'] }
        groovy { srcDir 'test/groovy' }
        resources { srcDir 'resources' }
    }

}

configurations {
    jaxws
}

task wsimport {
    doLast {
        destDir = file("${buildDir}/generated")
        ant {
            sourceSets.main.output.classesDir.mkdirs()
            destDir.mkdirs()
            taskdef(name:'wsimport',
                    classname:'com.sun.tools.ws.ant.WsImport',
                    classpath:configurations.jaxws.asPath)
            wsimport(keep:true,
                    destdir: sourceSets.main.output.classesDir,
                    sourcedestdir: destDir,
                    wsdl:'http://www.webservicex.net/CurrencyConvertor.asmx?wsdl')
        }
    }


}
compileJava.dependsOn(wsimport)

jar {

    doFirst {
        from (configurations.runtime.resolve().collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude 'META-INF/MANIFEST.MF'
            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.DSA'
            exclude 'META-INF/*.RSA'
        }
    }


    manifest {
        attributes("Main-Class": "com.ig.Hello")

    }
    dependsOn javadoc
}

dependencies {
    groovy group:'org.codehaus.groovy', name:'groovy-all', version:'1.8.8'
    jaxws 'com.sun.xml.ws:jaxws-tools:2.1.4'
    testCompile 'org.spockframework:spock-core:0.5-groovy-1.8'
}
